{% extends 'SyliusUiBundle:Form:theme.html.twig' %}

{# CUSTOM #}
{% block money_widget -%}
    <div class="ui labeled input">
        <div class="ui label">{{ ui_currency_symbol() }}</div>
        {{- form_widget(form) -}}
    </div>
{%- endblock money_widget %}

{% block datetime_widget %}
    {% spaceless %}
        {% if widget == 'single_text' %}
            {{ block('form_widget_simple') }}
        {% else %}
            <div class="fields datetime-widget">
                {{ form_widget(form.date) }}
                {{ form_widget(form.time) }}
            </div>
        {% endif %}
    {% endspaceless %}
{% endblock datetime_widget %}

{% block date_widget %}
    {% spaceless %}
        {% if widget == 'single_text' %}
            {{ block('form_widget_simple') }}
        {% else %}
            {{ '<div class="fields date-widget">{{ day }}{{ month }}{{ year }}</div>'|replace({
                '{{ day }}':   form_widget(form.day, {'attr': {'class': 'ui dropdown day-widget'}}),
                '{{ month }}': form_widget(form.month, {'attr': {'class': 'ui dropdown month-widget'}}),
                '{{ year }}':  form_widget(form.year, {'attr': {'class': 'ui dropdown year-widget'}}),
            })|raw }}
        {% endif %}
    {% endspaceless %}
{% endblock date_widget %}

{% block time_widget %}
    {% spaceless %}
        {% if widget == 'single_text' %}
            {{ block('form_widget_simple') }}
        {% else %}
            <div class="fields time-widget">
                {{ form_widget(form.hour) }}{% if with_minutes %}<span class="time-field-colon"> : </span>{{ form_widget(form.minute) }}{% endif %}{% if with_seconds %} {{ form_widget(form.second) }}{% endif %}
            </div>
        {% endif %}
    {% endspaceless %}
{% endblock time_widget %}


{% block checkbox_label %}
    {{ block('form_label') }}
{% endblock %}

{% block sylius_translations_widget %}
    <div class="ui top attached tabular menu">
        {% set currentLocale = sylius_locale() %}

        {% for translationsFields in form %}
            {% set locale = translationsFields.vars.name %}

            <a href="#" class="{% if currentLocale == locale %}active {% endif %}item" data-tab=".{{ translationsFields.vars.id }}_translationsFields-{{ locale }}">
                {{ locale|sylius_locale_name }}
                {% if translationsFields.vars.required %}*{% endif %}
            </a>
        {% endfor %}
    </div>

    {% for translationsFields in form %}
        {% set locale = translationsFields.vars.name %}
        <div class="ui bottom attached {% if currentLocale == locale %}active {% endif %}tab segment" data-tab=".{{ translationsFields.vars.id }}_translationsFields-{{ locale }}">
            {{ form_errors(translationsFields) }}
            {% if ordering is defined %}
                {% set fields = [] %}
                {% set fieldOptions = [] %}
                {% for order, orderOption in ordering %}
                    {% set fields = fields|merge([translationsFields[order]]) %}
                    {% set fieldOptions = fieldOptions|merge([orderOption]) %}
                {% endfor %}

                {% for field in fields %}
                    {{ form_row(field, fieldOptions[loop.index0]) }}
                {% endfor %}
            {% else %}
                {{ form_widget(translationsFields) }}
            {% endif %}
        </div>
    {% endfor %}
{% endblock %}

{% block collection_widget -%}
    {% from 'SyliusResourceBundle:Macros:notification.html.twig' import error %}
    {% set attr = attr|merge({'class': attr.class|default ~ ' controls collection-widget'}) %}

    {% spaceless %}
        <div data-form-type="collection"
                {{ block('widget_container_attributes') }}
                {% if prototype is defined and allow_add %}
            data-prototype='{{ _self.collectionItem(prototype, allow_delete, button_delete_label, '__name__')|e }}'
                {%- endif -%}>

            {{ error(form.vars.errors) }}

            {% if prototypes|default is iterable %}
                {% for key, subPrototype in prototypes %}
                    <input type="hidden"
                           data-form-prototype="{{ key }}"
                           value="{{ _self.collectionItem(subPrototype, allow_delete, button_delete_label, '__name__')|e }}" />
                {% endfor %}
            {% endif %}

            <div data-form-collection="list"
                 class="row collection-list">
                {% for child in form %}
                    {{ _self.collectionItem(child, allow_delete, button_delete_label, loop.index0) }}
                {% endfor %}
            </div>

            {% if prototype is defined and allow_add %}
                <a href="#" class="ui compact button"
                   data-form-collection="add">
                    <i class="ui plus icon"></i>
                    {{ button_add_label|trans }}
                </a>
            {% endif %}
        </div>
    {% endspaceless %}
{%- endblock collection_widget %}

{% macro collectionItem(form, allow_delete, button_delete_label, index) %}
    {% spaceless %}
        <div data-form-collection="item"
             data-form-collection-index="{{ index }}"
             class="collection-item">
            <div class="collection-box{% if form|length == 1 %} unique-field{% endif %}">
                {% if allow_delete %}
                    <p class="text-right">
                        <a href="#" data-form-collection="delete" class="ui compact button">
                            <i class="ui icon trash outline"></i>
                            {{ button_delete_label|trans }}
                        </a>
                    </p>
                {% endif %}

                {{ form_widget(form) }}
            </div>
        </div>
    {% endspaceless %}
{% endmacro %}

{% macro hide(field, attr, default_value) %}
    {{ form_widget(field, {
        'attr': {
            'value': field.vars.value|default(default_value),
            'style': 'display:none;'
        }|merge(attr|default({}))
    }) }}
{% endmacro %}

{% macro readonly(field) %}
    {% if field.vars.value %}
        {{ form_row(field, {'attr': {'readonly': 'readonly'}}) }}
    {% else %}
        {{ form_row(field) }}
    {% endif %}
{% endmacro %}
